Required software:
Smrtanalysis version 2.3


Installation:
Modify the line:
SMRT_ROOT="/opt/smrtanalysis"
in the file ccs_job_maker.sh so instead of /opt/smrtanalysis it has the location of smrtanalysis on your computer.  If you type ls and this location you should see something like:
admin  common  current  install  smrtcmds  tmpdir  userdata
If you can't find it, ask the person who installed smrtanalysis where it is.
Optional:  Modify the header on ccs_job_maker.sh so you can submit it to sge.


Creating the barcode fasta file:
The set of barcodes you purchased should have a fasta file with their sequences.  Several can be found here:  https://github.com/PacificBiosciences/Bioinformatics-Training/tree/master/barcoding
The order of the barcodes in this file doesn't matter.  Extra barcodes are also fine.

Single sample mode:
This is intended to be used for debugging and testing parameters in a bash loop.  You should generally use the multi sample mode because it is more efficient when you have multiple samples per cell.
This takes several command line inputs (described below) and runs a SMRT pipe circular consensus sequencing (ccs) job to create a consensus fastq file.  This fastq can be used as an input file for MCSMRT.

Multi sample mode:
This runs many SMRT pipe ccs jobs.  Jobs are defined by a csv file.  The header line of the file is:  TODO: figure out all parameters
Each line in the file is one sample and each column is a parameter for a ccs job.  All of the parameters work the same as the single sample parameters except for job name.  When multiple samples from the same SMRT cell can be demultiplexed using the same parameters, they can be given the same job name.  Otherwise, all job names must be unique.  Lines with the same job name must contain the same values for all parameters except for name, barcode1 and barcode2.
All barcodes for a single job name should be unique.  For example, if job1 has sample A with barcode b1=x1 and b2=x2 then sample B from job1 cannot have x1 for either of its barcodes.  A different job can have a sample with barcode b1=x1 and b2=x2.
All sample names must be unique for their outdir.  TODO: decide if multiple outdirs are allowed - no because each outdir should be a project and you should use different input files for different projects

Steps:
A bash script checks that SMRT_ROOT/current/etc/setup.sh exists and sources it.
Bash script calls python script which does all command line parsing.
Since SMRT_ROOT/current/etc/setup.sh uses python 2.7.3, so does this script.

Batch mode:
    Inputs are divided by job name
Single sample mode:
    Inputs are treated as a single batch job

Both modes:
    Checks are done for each job to be sure that all parameters match except for name, barcode1 and barcode2
    Values are checked:
        OUTDIR doesn't exist (this simplifies error checking)
        0 <= FULL_PASSES <= 10
        70 <= pred acc <= 100
        video path exists and has at least one bax.h5 file - needs a helpful error message if path only has bam files
        barcode file looks like a fasta file
        b1 and b2 are headers in the bcf
        check paths for spaces

    Directories are created
    Barcode reference files are uploaded
    inputs.xml and settings.xml are created
    ccs jobs are run
    ccs passes are counted and added to headers




usage: ccs_job_maker.py [-h] [-o OUTDIR] [-n NAME] [-fp FULL_PASSES]
                        [-pa PRED_ACCURACY] [-bcm {asymmetric,symmetric}] -bcf
                        BARCODE_FILE -s SMRT_ROOT -v VIDEO_PATH -b1 BARCODE1
                        -b2 BARCODE2

Create SMRT pipe ccs jobs

optional arguments:
  -h, --help            show this help message and exit
  -o OUTDIR, --outdir OUTDIR
                        output directory (default: /home/data/shared/homes/rac
                        hel/ccs_smrt_pipe/smrt_pipe_ccs)
  -n NAME, --name NAME  A name for the fastq output file (default: Sample1)
  -fp FULL_PASSES, --full_passes FULL_PASSES
                        The minimum number of full passes which must be an
                        integer between zero and ten (default: 3)
  -pa PRED_ACCURACY, --pred_accuracy PRED_ACCURACY
                        Minimum prediction accuracy which must be an integer
                        between 70 and 100 (default: 90)
  -bcm {asymmetric,symmetric}, --barcode_mode {asymmetric,symmetric}
                        must be either "asymmetric" or "symmetric" (default:
                        asymmetric)

Required arguments:
  -bcf BARCODE_FILE, --barcode_file BARCODE_FILE
                        The path to the fasta file with the barcodes (default:
                        None)
  -v VIDEO_PATH, --video_path VIDEO_PATH
                        The directory containing the *.bax.h5 files (default:
                        None)
  -b1 BARCODE1, --barcode1 BARCODE1
                        The forward barcode name (default: None)
  -b2 BARCODE2, --barcode2 BARCODE2
                        The reverse barcode name (default: None)



Detailed explanation of arguments:
OUTDIR - This is a path to a directory that does not currently exist.  The default option is to create a directory called smrt_pipe_ccs in your current directory.
FULL_PASSES - PacBio describes this as "The minimum number of full-length passes over the insert DNA for the read to be included."  It must be a whole number between zero and ten, inclusive.
PRED_ACCURACY - PacBio describes this as "The minimum predicted accuracy (in %) of the Reads of Insert emitted."  It must be a whole number between 70 and 100, inclusive.
BARCODE_MODE - This specifies the type of barcoding used so that barcodes can be scored correctly.  The argument is symmetric if the barcode sequences are the same on both sides of the insert and asymmetric if they are different.
BARCODE_FILE - This is the path to a fasta file with the barcodes used for the experiment.
RUN_PATH - A directory containing the *.bax.h5 data files.  In the directory with the raw data from a pacbio cell, this the Analysis_Results folder.  All *.bax.h5 files in the directory will be used.  On my computer this path would be something like /data/pacbio/rawdata/run_name/A01_1/Analysis_Results
BARCODE - b1 and b2 must be valid fasta headers from the barcode fasta file.


Detailed explanation of output directory:
OUTDIR/fq - this has the fastq output file(s).  The header lines are the headers created by smrtpipe with ';ccs=X;' appended to the end.  X is the number of ccs passes that were used to generate that entry in the file.


Future issues:
Min barcode score depends on barcode length.  This is the same issues I had with the short and long barcodes for genomes.
"This parameter will filter outputs (fastq and aligned reads) by the minimum average barcode score for each molecule. The maximum possible score is 2 x (length of sequence in barcode FASTA). In the EGFR-MET test dataset using 21 bp padded barcodes, 99.5% calling accuracy is achieved at a minimum barcode score of 30. The same calling accuracy with 16bp unpadded barcodes can be achieved using a minimum barcode score of 23."


Features:
Make it work for # videos != 3
Create and upload as a reference a correctly ordered barcode fasta file (might need to run samtools faidx which should be in smrt_root).  Save it to OUTDIR/job_name/barcode
Parse input csv (pandas would be nice for this, but I can write a parser myself)
Group together data to avoid redundant ccs smrt pipe jobs
Output summary
SGE mode?  I've never found a program that used this well.
